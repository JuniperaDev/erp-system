openapi: 3.0.3
info:
  title: Audit Trail Service API
  description: |
    Comprehensive audit trail and compliance reporting API for the ERP System.
    
    This API provides access to audit trails, compliance reports, event sourcing capabilities,
    and regulatory compliance features. All endpoints require authentication and appropriate
    authorization based on the user's role and permissions.
    
    All endpoints require JWT bearer token authentication. Include the token in the 
    Authorization header: `Authorization: Bearer <token>`
    
    - Standard endpoints: 1000 requests/hour per user
    - Report generation: 10 requests/hour per user  
    - Export endpoints: 5 requests/hour per user
    - Search endpoints: 500 requests/hour per user
    
    This API uses URL versioning. Current version is v1. Future versions will be
    available at `/api/v2/audit-trail` etc.
  version: 1.0.0
  contact:
    name: ERP System Team
    email: mailnjeru@gmail.com
  license:
    name: GPL-3.0
    url: https://www.gnu.org/licenses/gpl-3.0.html

servers:
  - url: /api/v1/audit-trail
    description: Production API v1
  - url: /api/v2/audit-trail
    description: Next generation API (future)

security:
  - bearerAuth: []

tags:
  - name: Audit Trail
    description: Core audit trail operations
  - name: Compliance
    description: Compliance reporting and monitoring
  - name: Event Sourcing
    description: Event sourcing and replay capabilities
  - name: Search
    description: Audit event search and filtering
  - name: Export
    description: Data export and archival operations

paths:
  /events/{entityType}/{entityId}:
    get:
      tags: [Audit Trail]
      summary: Retrieve audit trail for entity
      description: |
        Get the complete audit trail for a specific entity within a date range.
        Results are paginated and sorted chronologically.
      parameters:
        - name: entityType
          in: path
          required: true
          description: Type of entity (e.g., Payment, Invoice, AssetRegistration)
          schema:
            type: string
            example: Payment
        - name: entityId
          in: path
          required: true
          description: Unique identifier of the entity
          schema:
            type: string
            example: "12345"
        - name: fromDate
          in: query
          description: Start date for audit trail (ISO 8601 format)
          schema:
            type: string
            format: date-time
            example: "2024-01-01T00:00:00Z"
        - name: toDate
          in: query
          description: End date for audit trail (ISO 8601 format)
          schema:
            type: string
            format: date-time
            example: "2024-12-31T23:59:59Z"
        - name: eventTypes
          in: query
          description: Filter by specific event types (comma-separated)
          schema:
            type: string
            example: "CREATED,UPDATED,DELETED"
        - name: userId
          in: query
          description: Filter by user who performed actions
          schema:
            type: string
            example: "john.doe"
        - name: page
          in: query
          description: Page number (0-based)
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: size
          in: query
          description: Page size
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
        - name: sort
          in: query
          description: Sort criteria (field,direction)
          schema:
            type: string
            default: "occurredOn,asc"
            example: "occurredOn,desc"
      responses:
        '200':
          description: Audit trail retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrailResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'

  /events/search:
    post:
      tags: [Search]
      summary: Advanced audit event search
      description: |
        Perform advanced search across audit events using flexible criteria.
        Supports full-text search, date ranges, and complex filtering.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuditSearchRequest'
      responses:
        '200':
          description: Search results retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditSearchResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /compliance-reports:
    post:
      tags: [Compliance]
      summary: Generate compliance report
      description: |
        Generate a compliance report for a specific framework and time period.
        Report generation is asynchronous - use the returned job ID to check status.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComplianceReportRequest'
      responses:
        '202':
          description: Report generation initiated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportGenerationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'

  /compliance-reports/{jobId}:
    get:
      tags: [Compliance]
      summary: Get compliance report status
      description: Check the status of a compliance report generation job
      parameters:
        - name: jobId
          in: path
          required: true
          description: Report generation job ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Report status retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportStatusResponse'
        '404':
          $ref: '#/components/responses/NotFound'

  /compliance-reports/{jobId}/download:
    get:
      tags: [Compliance]
      summary: Download completed compliance report
      description: Download the generated compliance report file
      parameters:
        - name: jobId
          in: path
          required: true
          description: Report generation job ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Report file download
          content:
            application/pdf:
              schema:
                type: string
                format: binary
            text/csv:
              schema:
                type: string
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: string
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: Report not ready for download

  /event-sourcing/reconstruct/{entityType}/{entityId}:
    get:
      tags: [Event Sourcing]
      summary: Reconstruct entity state
      description: |
        Reconstruct the state of an entity at a specific point in time using event sourcing.
        This provides a complete view of how the entity looked at any historical moment.
      parameters:
        - name: entityType
          in: path
          required: true
          schema:
            type: string
        - name: entityId
          in: path
          required: true
          schema:
            type: string
        - name: asOfDate
          in: query
          required: true
          description: Point in time for state reconstruction
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Entity state reconstructed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateResponse'

  /event-sourcing/replay/{aggregateId}:
    post:
      tags: [Event Sourcing]
      summary: Replay events for aggregate
      description: |
        Replay events for a specific aggregate from a given point in time.
        Useful for debugging and state reconstruction.
      parameters:
        - name: aggregateId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fromTime:
                  type: string
                  format: date-time
                  description: Start time for event replay
                toTime:
                  type: string
                  format: date-time
                  description: End time for event replay (optional)
              required: [fromTime]
      responses:
        '200':
          description: Events replayed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventReplayResponse'

  /event-sourcing/validate/{aggregateId}:
    get:
      tags: [Event Sourcing]
      summary: Validate event integrity
      description: |
        Validate the integrity and consistency of events for a specific aggregate.
        Checks for proper event ordering, version consistency, and data integrity.
      parameters:
        - name: aggregateId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Validation completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'

  /export/{entityType}/{entityId}:
    post:
      tags: [Export]
      summary: Export audit trail
      description: |
        Export audit trail data for an entity in various formats.
        Export is asynchronous - use the returned job ID to download the file.
      parameters:
        - name: entityType
          in: path
          required: true
          schema:
            type: string
        - name: entityId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportRequest'
      responses:
        '202':
          description: Export initiated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportResponse'

  /statistics/summary:
    get:
      tags: [Audit Trail]
      summary: Get audit event statistics
      description: |
        Get summary statistics for audit events within a date range.
        Includes event counts by type, user activity, and trend analysis.
      parameters:
        - name: fromDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: toDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: groupBy
          in: query
          description: Group statistics by field
          schema:
            type: string
            enum: [eventType, userId, entityType, hour, day, week, month]
            default: eventType
      responses:
        '200':
          description: Statistics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditStatisticsResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    AuditEvent:
      type: object
      description: Base audit event structure
      properties:
        eventId:
          type: string
          format: uuid
          description: Unique event identifier
        eventType:
          type: string
          enum: [CREATED, UPDATED, DELETED, ACCESSED, PROCESSED, APPROVED, REJECTED]
          description: Type of audit event
        aggregateType:
          type: string
          description: Entity type being audited
        aggregateId:
          type: string
          description: Entity instance identifier
        occurredOn:
          type: string
          format: date-time
          description: Event timestamp
        version:
          type: integer
          description: Event version for ordering
        correlationId:
          type: string
          format: uuid
          description: Transaction correlation identifier
        userId:
          type: string
          description: User performing the action
        sessionId:
          type: string
          description: User session identifier
        ipAddress:
          type: string
          description: Client IP address
        userAgent:
          type: string
          description: Client user agent
        changes:
          type: object
          properties:
            oldValues:
              type: object
              description: Previous entity state
            newValues:
              type: object
              description: New entity state
            changedFields:
              type: array
              items:
                type: string
      required: [eventId, eventType, aggregateType, aggregateId, occurredOn, userId]

    ComplianceAuditEvent:
      allOf:
        - $ref: '#/components/schemas/AuditEvent'
        - type: object
          properties:
            complianceType:
              type: string
              enum: [SOX, GDPR, IFRS16, BASEL_III, CUSTOM]
            regulationReference:
              type: string
            complianceStatus:
              type: string
              enum: [COMPLIANT, NON_COMPLIANT, PENDING, EXCEPTION]
            riskLevel:
              type: string
              enum: [LOW, MEDIUM, HIGH, CRITICAL]
            remediationRequired:
              type: boolean
            auditorId:
              type: string
          required: [complianceType, complianceStatus]

    AuditTrailResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/AuditEvent'
        pageable:
          $ref: '#/components/schemas/Pageable'
        totalElements:
          type: integer
          description: Total number of audit events
        totalPages:
          type: integer
          description: Total number of pages
        first:
          type: boolean
          description: Whether this is the first page
        last:
          type: boolean
          description: Whether this is the last page
        numberOfElements:
          type: integer
          description: Number of elements in current page

    AuditSearchRequest:
      type: object
      properties:
        query:
          type: string
          description: Full-text search query
        filters:
          type: object
          properties:
            entityTypes:
              type: array
              items:
                type: string
            eventTypes:
              type: array
              items:
                type: string
            userIds:
              type: array
              items:
                type: string
            dateRange:
              type: object
              properties:
                from:
                  type: string
                  format: date-time
                to:
                  type: string
                  format: date-time
            ipAddresses:
              type: array
              items:
                type: string
        aggregations:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              type:
                type: string
                enum: [terms, date_histogram, range]
        sort:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              direction:
                type: string
                enum: [asc, desc]
        page:
          type: integer
          default: 0
        size:
          type: integer
          default: 20
          maximum: 100

    AuditSearchResponse:
      type: object
      properties:
        hits:
          type: array
          items:
            $ref: '#/components/schemas/AuditEvent'
        totalHits:
          type: integer
        aggregations:
          type: object
        took:
          type: integer
          description: Search execution time in milliseconds

    ComplianceReportRequest:
      type: object
      properties:
        reportType:
          type: string
          enum: [SOX, GDPR, IFRS16, CUSTOM]
          description: Type of compliance report
        templateId:
          type: string
          description: Custom report template ID
        fromDate:
          type: string
          format: date-time
          description: Report start date
        toDate:
          type: string
          format: date-time
          description: Report end date
        entityTypes:
          type: array
          items:
            type: string
          description: Filter by specific entity types
        includeDetails:
          type: boolean
          default: true
          description: Include detailed event information
        format:
          type: string
          enum: [PDF, CSV, JSON, XML]
          default: PDF
          description: Output format
        deliveryMethod:
          type: string
          enum: [DOWNLOAD, EMAIL]
          default: DOWNLOAD
        emailRecipients:
          type: array
          items:
            type: string
            format: email
      required: [reportType, fromDate, toDate]

    ReportGenerationResponse:
      type: object
      properties:
        jobId:
          type: string
          format: uuid
          description: Report generation job ID
        status:
          type: string
          enum: [QUEUED, IN_PROGRESS, COMPLETED, FAILED]
        estimatedCompletionTime:
          type: string
          format: date-time
        statusUrl:
          type: string
          format: uri
          description: URL to check job status

    ReportStatusResponse:
      type: object
      properties:
        jobId:
          type: string
          format: uuid
        status:
          type: string
          enum: [QUEUED, IN_PROGRESS, COMPLETED, FAILED]
        progress:
          type: integer
          minimum: 0
          maximum: 100
          description: Completion percentage
        startedAt:
          type: string
          format: date-time
        completedAt:
          type: string
          format: date-time
        errorMessage:
          type: string
          description: Error message if status is FAILED
        downloadUrl:
          type: string
          format: uri
          description: Download URL if status is COMPLETED
        fileSize:
          type: integer
          description: File size in bytes if completed

    EntityStateResponse:
      type: object
      properties:
        entityType:
          type: string
        entityId:
          type: string
        asOfDate:
          type: string
          format: date-time
        state:
          type: object
          description: Reconstructed entity state
        eventCount:
          type: integer
          description: Number of events used for reconstruction
        lastEventDate:
          type: string
          format: date-time
        version:
          type: integer

    EventReplayResponse:
      type: object
      properties:
        aggregateId:
          type: string
        fromTime:
          type: string
          format: date-time
        toTime:
          type: string
          format: date-time
        events:
          type: array
          items:
            $ref: '#/components/schemas/AuditEvent'
        eventCount:
          type: integer
        replayDuration:
          type: integer
          description: Replay execution time in milliseconds

    ValidationResponse:
      type: object
      properties:
        aggregateId:
          type: string
        valid:
          type: boolean
        eventCount:
          type: integer
        validationErrors:
          type: array
          items:
            type: object
            properties:
              eventId:
                type: string
              errorType:
                type: string
                enum: [ORDERING_VIOLATION, VERSION_MISMATCH, INTEGRITY_FAILURE]
              message:
                type: string
        validationSummary:
          type: object
          properties:
            totalEvents:
              type: integer
            validEvents:
              type: integer
            invalidEvents:
              type: integer
            warningCount:
              type: integer

    ExportRequest:
      type: object
      properties:
        fromDate:
          type: string
          format: date-time
        toDate:
          type: string
          format: date-time
        format:
          type: string
          enum: [JSON, CSV, XML, PARQUET]
          default: JSON
        includeMetadata:
          type: boolean
          default: true
        compression:
          type: string
          enum: [NONE, GZIP, ZIP]
          default: GZIP
        eventTypes:
          type: array
          items:
            type: string
      required: [fromDate, toDate]

    ExportResponse:
      type: object
      properties:
        jobId:
          type: string
          format: uuid
        status:
          type: string
          enum: [QUEUED, IN_PROGRESS, COMPLETED, FAILED]
        estimatedSize:
          type: integer
          description: Estimated file size in bytes
        statusUrl:
          type: string
          format: uri

    AuditStatisticsResponse:
      type: object
      properties:
        period:
          type: object
          properties:
            from:
              type: string
              format: date-time
            to:
              type: string
              format: date-time
        totalEvents:
          type: integer
        eventsByType:
          type: object
          additionalProperties:
            type: integer
        eventsByUser:
          type: object
          additionalProperties:
            type: integer
        eventsByEntity:
          type: object
          additionalProperties:
            type: integer
        timeline:
          type: array
          items:
            type: object
            properties:
              timestamp:
                type: string
                format: date-time
              count:
                type: integer
        topUsers:
          type: array
          items:
            type: object
            properties:
              userId:
                type: string
              eventCount:
                type: integer
        trends:
          type: object
          properties:
            growthRate:
              type: number
              description: Event growth rate percentage
            peakHour:
              type: integer
              description: Hour with most activity (0-23)
            averageEventsPerDay:
              type: number

    Pageable:
      type: object
      properties:
        page:
          type: integer
        size:
          type: integer
        sort:
          type: array
          items:
            type: string

    ErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: integer
        error:
          type: string
        message:
          type: string
        path:
          type: string
        traceId:
          type: string
          description: Request trace ID for debugging

  responses:
    BadRequest:
      description: Invalid request parameters or malformed request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            timestamp: "2024-01-15T10:30:00Z"
            status: 400
            error: "Bad Request"
            message: "Invalid date format. Expected ISO 8601 format."
            path: "/api/v1/audit-trail/events/Payment/123"
            traceId: "abc123def456"

    Unauthorized:
      description: Authentication required or invalid token
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            timestamp: "2024-01-15T10:30:00Z"
            status: 401
            error: "Unauthorized"
            message: "JWT token is expired or invalid"
            path: "/api/v1/audit-trail/events/Payment/123"

    Forbidden:
      description: Insufficient permissions for the requested operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            timestamp: "2024-01-15T10:30:00Z"
            status: 403
            error: "Forbidden"
            message: "User does not have AUDIT_READ permission"
            path: "/api/v1/audit-trail/events/Payment/123"

    NotFound:
      description: Requested resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            timestamp: "2024-01-15T10:30:00Z"
            status: 404
            error: "Not Found"
            message: "Entity Payment with ID 123 not found"
            path: "/api/v1/audit-trail/events/Payment/123"

    TooManyRequests:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            timestamp: "2024-01-15T10:30:00Z"
            status: 429
            error: "Too Many Requests"
            message: "Rate limit exceeded. Maximum 1000 requests per hour."
            path: "/api/v1/audit-trail/events/Payment/123"
      headers:
        Retry-After:
          description: Number of seconds to wait before making another request
          schema:
            type: integer
        X-RateLimit-Limit:
          description: Request limit per hour
          schema:
            type: integer
        X-RateLimit-Remaining:
          description: Remaining requests in current window
          schema:
            type: integer
        X-RateLimit-Reset:
          description: Time when rate limit resets (Unix timestamp)
          schema:
            type: integer
